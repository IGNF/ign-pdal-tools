
name: cicd_deploy

on:
  # Also run when the pull request merges  (which generates a push)
  # So that we can tag the docker image appropriately.
  push:
    branches: [ "master" ]
    tags: [ 'v*.*.*' ]

env:
  IMAGE_NAME:  ${{ github.repository }}
  REGISTRY: ghcr.io
  TEST_TAG:  ${{ github.repository }}:test

jobs:
  deploy_docker:
    runs-on: ubuntu-latest

    permissions:
      packages: write

    steps:
    - name: Checkout branch
      uses: actions/checkout@v4

    - name: Build the Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        load: true
        tags: ${{ env.TEST_TAG }}

    # run the test on the docker image
    - name: Run tests in docker image
      run: >
        docker run
        --ipc=host
        ${{ env.TEST_TAG }}
        python -m pytest ./test -s --log-cli-level DEBUG

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      if: github.event_name != 'pull_request'
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    # Build an Docker image with Buildx (don't on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy-pypi:
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/ign-pdal-tools

    permissions:
      contents: read
      packages: write
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      # See https://github.com/marketplace/actions/setup-micromamba
      - name: setup-micromamba
        uses: mamba-org/setup-micromamba@v1.4.3
        with:
          environment-file: environment.yml
          environment-name: pdaltools  # activate the environment
          cache-environment: true
          cache-downloads: true
          generate-run-shell: true

      - name: Run tests with pytest
        shell: micromamba-shell {0}
        run: python -m pytest ./test -s --log-cli-level DEBUG

      - name: Build pip package
        shell: micromamba-shell {0}
        run: make build

      - name: pypi-publish
        uses: pypa/gh-action-pypi-publish@v1.8.6